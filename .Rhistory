blogdown:::serve_site()
blogdown::serve_site()
blogdown:::serve_site()
2+2
2+2
2+2
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
library(ggplot2) #graphing
library(dplyr) #data manipulation
library(tidyr) #data manipulation
library(lubridate) #date manipulation
library(stringr) #manipulate strings
library(xts) #manipulate ts
library(fpp2) #comprehensive forecasting library
library(quantmod) #import financial data
library(dynlm) #model regression
library(urca) #for unit root tests
corona_virus <- list(cases = read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv"),
deaths = read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv"),
recovered = read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv"))
corona_virus <- list(cases = read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"),
deaths = read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv"),
recovered = read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv"))
head(corona_virus$cases)
corona_virus[["country_information"]] <- read.csv("https://population.un.org/wpp/Download/Files/1_Indicators%20(Standard)/CSV_FILES/WPP2019_TotalPopulationBySex.csv", header=TRUE, stringsAsFactors=FALSE)
head(corona_virus$cases)
corona_virus$cases <- corona_virus$cases %>%
gather(key = "Date", value = "Cases", -c(1,2,3,4)) %>% #Create date index (see dataset w/o this to understand)
mutate(Date = parse_date_time(str_remove(Date,"X"), "m.d.y"), #get dates in correct format
ID = paste0(Date, Country.Region, "-", Province.State)) #Create unique ID per observation
corona_virus$deaths <- corona_virus$deaths %>%
gather(key = "Date", value = "Cases", -c(1,2,3,4)) %>% #Create date index (see dataset w/o this to understand)
mutate(Date = parse_date_time(str_remove(Date,"X"), "m.d.y"), #get dates in correct format
ID = paste0(Date, Country.Region, "-", Province.State)) #Create unique ID per observation
corona_virus$recovered <- corona_virus$recovered %>%
gather(key = "Date", value = "Cases", -c(1,2,3,4)) %>% #Create date index (see dataset w/o this to understand)
mutate(Date = parse_date_time(str_remove(Date,"X"), "m.d.y"), #get dates in correct format
ID = paste0(Date, Country.Region, "-", Province.State)) #Create unique ID per observation
head(corona_virus$recovered)
head(corona_virus$deaths)
head(corona_virus$recovered)
head(corona_virus$deaths)
head(corona_virus$recovered)
head(corona_virus$recovered$`ï..Province.State`)
corona_virus$recovered <- corona_virus$recovered %>%
gather(key = "Date", value = "Cases", -c(1,2,3,4)) %>% #Create date index (see dataset w/o this to understand)
mutate(Date = parse_date_time(str_remove(Date,"X"), "m.d.y"), #get dates in correct format
ID = paste0(Date, Country.Region, "-", `ï..Province.State`)) #Create unique ID per observation. Province state for some reason
corona_virus$recovered
corona_virus$main <- inner_join(corona_virus$cases[,c(6,7)], by = "ID") %>%
inner_join(corona_virus$recovered[,c(6,7), by = "ID"])
corona_virus$main <- inner_join(corona_virus$cases[,c(6,7)],
corona_virus$deaths[,c(6,7)],
by = "ID") %>%
inner_join(corona_virus$recovered[,c(6,7),
by = "ID"])
corona_virus$main <- inner_join(corona_virus$cases[,c(6,7)],
corona_virus$deaths[,c(6,7)],
by = "ID") %>%
inner_join(corona_virus$recovered[,c(6,7)],
by = "ID")
corona_virus
glimpse(corona_virus)
corona_virus$main <- inner_join(corona_virus$cases,
corona_virus$deaths[,c(6,7)],
by = "ID") %>%
inner_join(corona_virus$recovered[,c(6,7)],
by = "ID")
head(corona_virus$main)
corona_virus$main <- corona_virus$main[,c(5,2,1,3,4,6,8,9)]
head(corona_virus$main)
tail(corona_virus$main)
names(corona_virus$main)
names(corona_virus$main[-3])
names(corona_virus$main)
names(corona_virus$main[1])
names(corona_virus$main[-1])
names(corona_virus$main[!1])
names(corona_virus$main[])
names(corona_virus$main[6:8])
names(corona_virus$main[6:8]) <- c("cases","deaths","recovered")
tail(corona_virus$main)
names(corona_virus$main[6:8]) <- c("cases","deaths","recovered")
tail(corona_virus$main)
corona_virus$main <- corona_virus$main %>%
rename(Cases.x = "cases",
Cases.y = "deaths",
Cases = "recovered")
corona_virus$main <- corona_virus$main %>%
rename("cases" = Cases.x,
"deaths" = Cases.y,
"recovered" = Cases)
head(corona_virus)
countries <- as.character(unique(corona_virus$main$Country.Region))
length(countries)
head(corona_virus$main)
corona_virus$main %>%
group_by(Country.Region) %>%
spread(key = "Country", Date)
corona_virus$main %>%
group_by(Country.Region) %>%
spread(key = "Date", Date)
corona_virus$main %>%
group_by(Country.Region) %>%
spread(key = "Country.Region", Date)
head(corona_virus$main)
corona_virus$main %>%
select(Date, Country.Region) %>%
group_by(Country.Region) %>%
spread(key = "Country.Region", Date)
corona_virus$main %>%
select(Date, Country.Region) %>%
group_by(Country.Region)
corona_virus$main %>%
select(Date, Country.Region, cases) %>%
group_by(Country.Region)
corona_virus$main %>%
select(Date, Country.Region, cases) %>%
group_by(Country.Region) %>%
spread(key = "Country.Region", Date)
corona_virus$main %>%
select(Date, Country.Region, cases) %>%
spread(key = Date, cases)
corona_virus$main %>%
select(Date, Country.Region, cases) %>%
spread(Date, cases)
corona_virus$main %>%
select(Date, Country.Region, cases) %>%
group_by(Country.Region) %>%
spread(Date, cases)
corona_virus$main %>%
select(Date, Country.Region, cases) %>%
group_by(Date) %>%
spread(Date, cases)
corona_virus$main
corona_virus$cases
print(countries)
head(corona_virus$main)
corona_virus$main %>%
filter(Date == "2020-02-22")
head(corona_virus$main)
corona_virus$main %>%
filter(Date == as.Date("2020-02-22"))
corona_virus$main %>%
filter(Date == as.Date("2020-02-22")) %>%
summarise(cases = sum(cases == 0))
corona_virus$main %>%
filter(Date == as.Date("2020-02-22")) %>%
summarise(cases = sum(cases != 0))
corona_virus$main %>%
filter(Date == as.Date("2020-02-22"), cases != 0)
corona_virus$main %>%
filter(Date == as.Date("2020-02-22"), cases != 0) %>%
summarise(countries_a = n())
x <- corona_virus$main %>%
filter(Date == as.Date("2020-02-22"), cases != 0) %>%
summarise(countries_a = n())
x
x <- corona_virus$main %>%
filter(Date == as.Date("2020-02-22"), cases != 0) %>%
summarise(n())
x
date_index <- unique(corona_virus$main$Date)
names(x)
countries_ts <- NULL
for (i in date_index){
x <- corona_virus$main %>%
filter(Date == as.Date(i), cases != 0) %>%
summarise(as.character(i) = n())
for (i in date_index){
x <- corona_virus$main %>%
filter(Date == as.Date(i), cases != 0) %>%
summarise(i = n())
countries_ts <- append(countries_ts, x)
}
countries_ts
for (i in date_index){
x <- corona_virus$main %>%
filter(Date == as.Date(i), cases != 0) %>%
summarise(i = n())
print(x)
countries_ts <- c(countries_ts, x)
}
for (i in date_index){
x <- vector(corona_virus$main %>%
filter(Date == as.Date(i), cases != 0) %>%
summarise(i = n()))
print(x)
countries_ts <- c(countries_ts, x)
}
corona_virus$main %>%
filter(Date == as.Date(date_index[1]), cases != 0) %>%
summarise(date_index[1] = n())
corona_virus$main %>%
filter(Date == as.Date(date_index[1]), cases != 0) %>%
summarise(date_index[1] = n())
corona_virus$main %>%
filter(Date == as.Date(date_index[1]), cases != 0) %>%
summarise(x = n())
x <- corona_virus$main %>%
filter(Date == as.Date(i), cases != 0) %>%
summarise(x = n())
print(x)
as.vector(x)
x
x <- corona_virus$main %>%
filter(Date == as.Date(i), cases != 0) %>%
summarise(x = n())
x
x <- corona_virus$main %>%
filter(Date == as.Date(i), cases != 0) %>%
summarise(x = n())
print(x)
corona_virus$main %>%
filter(Date == as.Date(i), cases != 0) %>%
summarise(x = n())
for (i in date_index){
x <- corona_virus$main %>%
filter(Date == as.Date(i), cases != 0) %>%
summarise(x = n())
print(x)
countries_ts <- c(countries_ts, x)
}
countries_ts <- NULL
x <- NULL
for (i in 1:length(date_index)){
x <- corona_virus$main %>%
filter(Date == as.Date(date_index[]), cases != 0) %>%
summarise(x = n())
print(x)
countries_ts <- c(countries_ts, x)
}
for (i in 1:length(date_index)){
x <- corona_virus$main %>%
filter(Date == as.Date(date_index[i]), cases != 0) %>%
summarise(x = n())
print(x)
countries_ts <- c(countries_ts, x)
}
length(unique(corona_virus$cases$Country.Region))
head(corona_virus$main)
tail(corona_virus$main)
unique(corona_virus$main$Country.Region)
head(corona_virus$main)
for (i in 1:length(date_index)){
x <- corona_virus$main %>%
filter(Date == as.Date(date_index[i]), cases != 0) %>%
summarise(x = n())
print(x)
countries_ts <- c(countries_ts, x)
}
countries_ts <- NULL
x <- NULL
for (i in 1:length(date_index)){
x <- corona_virus$main %>%
filter(Date == as.Date(date_index[i]), cases != 0)
x <- unique(x$Country.Region)
print(x)
countries_ts <- c(countries_ts, x)
}
for (i in 1:length(date_index)){
x <- corona_virus$main %>%
filter(Date == as.Date(date_index[i]), cases != 0)
x <- length(unique(x$Country.Region))
print(x)
countries_ts <- c(countries_ts, x)
}
countries_ts
countries_ts <- NULL
x <- NULL
for (i in 1:length(date_index)){
x <- corona_virus$main %>%
filter(Date == as.Date(date_index[i]), cases != 0)
x <- length(unique(x$Country.Region))
print(x)
countries_ts <- c(countries_ts, x)
}
countries_ts
countries_ts$date <- date_index
countries_ts
countries_ts <- NULL
x <- NULL
countries_ts$date <- date_index
countries_ts <- NULL
x <- NULL
for (i in 1:length(date_index)){
x <- corona_virus$main %>%
filter(Date == as.Date(date_index[i]), cases != 0)
x <- length(unique(x$Country.Region))
print(x)
countries_ts <- c(countries_ts, x)
}
countries_ts$date <- date_index
countries_ts <- NULL
x <- NULL
for (i in 1:length(date_index)){
x <- corona_virus$main %>%
filter(Date == as.Date(date_index[i]), cases != 0)
x <- length(unique(x$Country.Region))
countries_ts <- c(countries_ts, x)
}
countries_ts
length(countries_ts)
length(date_index)
countries_ts <- data.frame(date = date_index, number_countries = countries_ts)
countries_ts
ggplot(countries_ts, aes(x = date, y = number_countries)) +
geom_line()
countries_ts$percentage <- countries_ts$number_countries/195
ggplot(countries_ts, aes(x = date, y = number_countries)) +
geom_line()
ggplot(countries_ts, aes(x = date, y = number_countries)) +
geom_bar()
ggplot(countries_ts, aes(x = date, y = number_countries)) +
geom_point()
ggplot(countries_ts, aes(x = date, y = number_countries)) +
geom_point() +
labs(title = "Number of countries affected by COVID",
y = "Number of countries",
x = "Date",
caption = "Source: JHU Dataset")
ggplot(countries_ts, aes(x = date, y = number_countries)) +
geom_point() +
geom_smooth() +
labs(title = "Number of countries affected by COVID",
y = "Number of countries",
x = "Date",
caption = "Source: JHU Dataset")
ggplot(countries_ts, aes(x = date, y = number_countries)) +
geom_point() +
geom_smooth(method = "loess") +
labs(title = "Number of countries affected by COVID",
y = "Number of countries",
x = "Date",
caption = "Source: JHU Dataset")
ggplot(countries_ts, aes(x = date, y = number_countries)) +
geom_point() +
geom_smooth(method = "loess", se = F, col = "red") +
labs(title = "Number of countries affected by COVID",
y = "Number of countries",
x = "Date",
caption = "Source: JHU Dataset")
